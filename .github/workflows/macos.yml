name: MacOS
on:
  workflow_dispatch:
  push:
    branches:
      - "master"
    paths-ignore:
      - "**/README.md"
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - "**/README.md"
  schedule:
    - cron: "0 12 * * *"

env:
  BASE_BRANCH: master
  SCONS_CACHE_LIMIT: 7168

jobs:
  macos-templates:
    runs-on: "macos-latest"

    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macOS Editor
            cache-name: macos-editor-sp
            editor: true

          - name: macOS Template
            cache-name: macos-template-sp
            template: true

    steps:
      - name: Checkout Godot
        uses: actions/checkout@v3
        with:
          repository: godotengine/godot
          ref: 7e79aead99a53ee7cdf383add9a6a2aea4f15beb

      - name: Checkout LuaAPI
        uses: actions/checkout@v3
        with:
          repository: WeaselGames/godot_luaAPI
          ref: main
          submodules: recursive
          path: modules/luaAPI

      - name: Checkout Voxel
        uses: actions/checkout@v3
        with:
          repository: Zylann/godot_voxel
          ref: master
          path: modules/voxel

      - name: Checkout GodotSteam
        uses: actions/checkout@v3
        with:
          repository: Gramps/GodotSteam
          ref: godot4
          path: modules/godotsteam

      - name: Delete SDK Folder
        run: |
          rm -rf modules/godotsteam/sdk

      - name: Checkout SteamWorks SDK
        uses: actions/checkout@v3
        with:
          lfs: "true"
          repository: ${{ secrets.steamworks_sdk_repo }}
          ref: master
          token: ${{ secrets.steamworks_sdk_repo_token }}
          path: modules/godotsteam/sdk

      - name: Setup Vulkan SDK
        run: |
          sh misc/scripts/install_vulkan_sdk_macos.sh

      - name: Load .scons_cache directory
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{matrix.cache-name}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{matrix.cache-name}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{matrix.cache-name}}-${{env.BASE_BRANCH}}-${{github.ref}}
            ${{matrix.cache-name}}-${{env.BASE_BRANCH}}

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          architecture: "x64"

      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version

      - name: Compilation (editor)
        if: ${{ matrix.editor }}
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
          BUILD_NAME: "SP"
        run: |
          scons platform=macos arch=x86_64 target=editor
          scons platform=macos arch=arm64 target=editor

      - name: Compilation (template)
        if: ${{ matrix.template }}
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
          BUILD_NAME: "SP"
        run: |
          scons platform=macos arch=x86_64 target=template_debug
          scons platform=macos arch=arm64 target=template_debug
          scons platform=macos arch=x86_64 target=template_release
          scons platform=macos arch=arm64 target=template_release

      - name: Bundle architectures and pack (editor)
        if: ${{ matrix.editor }}
        run: |
          lipo -create bin/godot.macos.editor.x86_64 bin/godot.macos.editor.arm64 -output bin/godot.macos.editor.universal
          strip bin/godot.macos.editor.universal
          mkdir app
          cp -r misc/dist/macos_tools.app app/GodotSP.app
          mkdir -p app/GodotSP.app/Contents/MacOS
          cp bin/godot.macos.editor.universal app/GodotSP.app/Contents/MacOS/godot.macos.editor.universal
          chmod +x app/GodotSP.app/Contents/MacOS/godot.macos.editor.universal

      - name: Bundle architectures and pack (template)
        if: ${{ matrix.template }}
        run: |
          lipo -create bin/godot.macos.template_debug.x86_64 bin/godot.macos.template_debug.arm64 -output bin/godot.macos.template_debug.universal
          lipo -create bin/godot.macos.template_release.x86_64 bin/godot.macos.template_release.arm64 -output bin/godot.macos.template_release.universal
          strip bin/godot.*
          mkdir app
          cp -r misc/dist/macos_template.app app/macos_template.app
          mkdir -p app/macos_template.app/Contents/MacOS
          cp bin/godot.macos.template_debug.universal app/macos_template.app/Contents/MacOS/godot.macos.template_debug.universal
          cp bin/godot.macos.template_release.universal app/macos_template.app/Contents/MacOS/godot.macos.template_release.universal
          chmod +x app/macos_template.app/Contents/MacOS/godot.macos.template_debug.universal
          chmod +x app/macos_template.app/Contents/MacOS/godot.macos.template_release.universal

      - name: Prepare artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.cache-name}}
          path: app
